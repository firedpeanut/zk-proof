import * as anchor from "@coral-xyz/anchor";
import { Program } from "@coral-xyz/anchor";
import { ZkProof } from "../target/types/zk_proof";

process.env.ANCHOR_PROVIDER_URL =
  "https://solana-devnet.g.alchemy.com/v2/ez0ou58DU8YEeS4MIErSOujrzcLPvn8m";
process.env.ANCHOR_WALLET = "/home/zgf/.config/solana/id.json";

const provider = anchor.AnchorProvider.env();
anchor.setProvider(provider);

const program = new Program<ZkProof>(
  require("../target/idl/zk_proof.json"),
  provider
);
const payer = provider.wallet as anchor.Wallet;
async function main() {
  const proof_a = [
    47, 198, 71, 29, 109, 164, 66, 39, 184, 52, 225, 215, 12, 59, 44, 15, 11,
    69, 164, 16, 37, 33, 84, 99, 96, 54, 132, 205, 105, 125, 12, 212, 158, 68,
    45, 8, 123, 150, 209, 88, 35, 213, 88, 170, 76, 137, 189, 79, 168, 75, 226,
    126, 45, 164, 46, 140, 246, 134, 223, 170, 182, 38, 22, 44,
  ];
  const proof_b = [
    23, 219, 150, 147, 27, 108, 16, 130, 161, 175, 86, 230, 222, 94, 156, 249,
    120, 0, 19, 99, 246, 222, 116, 185, 53, 85, 15, 236, 159, 230, 28, 10, 11,
    79, 238, 16, 144, 181, 104, 214, 186, 190, 105, 77, 101, 28, 27, 151, 199,
    103, 92, 11, 73, 45, 154, 162, 72, 92, 106, 203, 132, 108, 193, 145, 9, 10,
    64, 190, 44, 254, 71, 138, 219, 187, 150, 23, 217, 36, 220, 248, 14, 23,
    228, 134, 149, 89, 55, 153, 213, 22, 74, 104, 209, 48, 97, 60, 8, 145, 63,
    20, 19, 169, 54, 176, 21, 14, 94, 161, 177, 82, 71, 147, 156, 251, 47, 255,
    76, 206, 210, 230, 16, 108, 221, 183, 232, 60, 180, 131,
  ];
  const proof_c = [
    42, 118, 70, 18, 174, 29, 9, 235, 243, 123, 228, 20, 39, 100, 118, 241, 158,
    11, 204, 62, 81, 188, 101, 132, 208, 117, 174, 185, 185, 48, 0, 205, 154,
    71, 214, 90, 210, 177, 63, 19, 114, 204, 93, 20, 208, 129, 210, 13, 145, 64,
    73, 170, 35, 250, 21, 158, 15, 169, 175, 40, 138, 216, 63, 102,
  ];
  const public_inputs = [
    19, 43, 225, 76, 89, 138, 161, 130, 163, 50, 87, 53, 100, 11, 100, 125, 14,
    209, 172, 17, 215, 117, 9, 66, 165, 250, 18, 156, 245, 66, 15, 125, 21, 141,
    175, 114, 246, 157, 206, 169, 6, 32, 14, 243, 244, 181, 234, 187, 184, 30,
    138, 236, 154, 70, 215, 186, 12, 211, 186, 165, 135, 109, 22, 225,
  ];

  const vk_alpha_g1 = [
    18, 132, 203, 120, 123, 180, 106, 235, 166, 60, 192, 10, 119, 86, 218, 46,
    54, 139, 2, 219, 178, 99, 115, 87, 27, 191, 197, 14, 103, 206, 241, 233, 14,
    200, 64, 228, 230, 127, 227, 127, 200, 158, 204, 84, 82, 61, 197, 200, 184,
    156, 139, 234, 30, 54, 133, 82, 116, 209, 210, 4, 2, 66, 181, 163,
  ];
  const vk_beta_g2 = [
    36, 204, 10, 95, 135, 241, 243, 93, 146, 149, 66, 35, 85, 104, 239, 225,
    225, 216, 28, 131, 217, 242, 107, 13, 45, 96, 149, 95, 81, 146, 94, 187, 30,
    169, 250, 71, 189, 233, 137, 57, 96, 31, 253, 211, 219, 251, 212, 153, 211,
    89, 39, 170, 237, 212, 156, 181, 71, 137, 164, 112, 212, 112, 122, 234, 154,
    160, 81, 209, 103, 17, 33, 0, 253, 2, 149, 251, 192, 248, 138, 238, 191, 11,
    123, 130, 240, 245, 222, 251, 251, 51, 208, 182, 81, 7, 154, 105, 5, 233,
    248, 27, 54, 255, 252, 193, 7, 153, 20, 204, 245, 255, 184, 48, 81, 9, 250,
    156, 200, 135, 29, 175, 226, 32, 56, 132, 206, 9, 126, 88,
  ];
  const vk_gamma_g2 = [
    40, 162, 198, 165, 50, 152, 245, 111, 237, 155, 202, 206, 61, 213, 188, 41,
    110, 40, 191, 176, 244, 109, 219, 213, 47, 27, 226, 250, 15, 59, 202, 6, 33,
    247, 202, 58, 46, 20, 246, 122, 175, 57, 110, 248, 28, 247, 113, 27, 155,
    26, 174, 156, 84, 237, 80, 71, 162, 248, 216, 133, 83, 191, 250, 157, 22,
    61, 191, 18, 68, 148, 5, 149, 42, 71, 30, 200, 189, 78, 20, 94, 68, 26, 128,
    40, 230, 195, 243, 182, 84, 213, 198, 126, 69, 228, 52, 78, 23, 128, 186,
    214, 79, 216, 141, 122, 61, 225, 121, 15, 159, 71, 200, 39, 184, 199, 64,
    101, 123, 141, 179, 178, 82, 213, 216, 134, 116, 115, 181, 232,
  ];
  const vk_delta_g2 = [
    40, 113, 185, 176, 171, 252, 254, 112, 136, 102, 97, 74, 231, 22, 25, 68,
    124, 150, 248, 213, 144, 183, 90, 175, 140, 188, 22, 86, 29, 146, 199, 137,
    22, 87, 7, 73, 191, 104, 29, 177, 213, 183, 176, 249, 229, 35, 152, 158, 32,
    241, 69, 8, 82, 83, 227, 166, 8, 232, 68, 195, 102, 37, 44, 38, 9, 57, 182,
    9, 17, 233, 70, 94, 38, 43, 53, 226, 123, 21, 111, 220, 2, 67, 134, 201,
    238, 56, 71, 242, 177, 25, 100, 121, 255, 52, 66, 45, 19, 37, 7, 135, 156,
    118, 156, 3, 4, 103, 129, 30, 191, 245, 97, 19, 80, 4, 245, 37, 105, 157,
    222, 2, 144, 134, 195, 129, 168, 18, 213, 249,
  ];
  const tx = await program.methods
    .verify(
      proof_a,
      proof_b,
      proof_c,
      public_inputs,
      vk_alpha_g1,
      vk_beta_g2,
      vk_gamma_g2,
      vk_delta_g2
    )
    .accounts({
      singer: payer.publicKey,
    })
    .signers([payer.payer])
    .rpc();

  console.log("Transaction signature:", tx);
}

main().then(() => process.exit());
